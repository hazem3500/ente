services:
  # Config generator - creates museum.yaml from environment variables
  config-generator:
    image: alpine:latest
    command: |
      sh -c '
      cat > /shared/museum.yaml << EOF
      db:
        host: postgres
        port: 5432
        name: $${POSTGRES_DB}
        user: $${POSTGRES_USER}
        password: $${POSTGRES_PASSWORD}

      s3:
        are_local_buckets: true
        use_path_style_urls: true
        b2-eu-cen:
          key: $${MINIO_ROOT_USER}
          secret: $${MINIO_ROOT_PASSWORD}
          endpoint: https://storage.photos.zem.cool
          region: eu-central-1
          bucket: b2-eu-cen

      apps:
        public-albums: $${ENTE_ALBUMS_ORIGIN}
        cast: $${ENTE_ALBUMS_ORIGIN}
        accounts: $${ENTE_ALBUMS_ORIGIN}

      key:
        encryption: $${ENTE_ENCRYPTION_KEY}
        hash: $${ENTE_HASH_KEY}

      jwt:
        secret: $${ENTE_JWT_SECRET}
      EOF
      echo "Generated museum.yaml successfully"
      cat /shared/museum.yaml
      '
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - ENTE_ALBUMS_ORIGIN=${ENTE_ALBUMS_ORIGIN}
      - ENTE_ENCRYPTION_KEY=${ENTE_ENCRYPTION_KEY}
      - ENTE_HASH_KEY=${ENTE_HASH_KEY}
      - ENTE_JWT_SECRET=${ENTE_JWT_SECRET}
    volumes:
      - shared-config:/shared

  museum:
    build:
      context: ..
    ports:
      - 8081:8080
    depends_on:
      config-generator:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    environment:
      - ENTE_API_ORIGIN=${ENTE_API_ORIGIN}
      - ENTE_ALBUMS_ORIGIN=${ENTE_ALBUMS_ORIGIN}
    volumes:
      - shared-config:/shared-config:ro
      - ./data:/data:ro
    command: |
      sh -c '
      cp /shared-config/museum.yaml /museum.yaml
      echo "91.98.67.202 storage.photos.zem.cool" >> /etc/hosts
      ./museum
      '
    networks:
      - default

  postgres:
    image: postgres:15-trixie
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: pg_isready -q -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      start_period: 30s
      start_interval: 1s
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - default
      - dokploy

  minio:
    image: minio/minio
    ports:
      - 3200:3200
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_SERVER_URL=https://storage.photos.zem.cool
      - MINIO_BROWSER_REDIRECT_URL=https://storage.photos.zem.cool
    command: server /data --address ":3200" --console-address ":3201"
    volumes:
      - minio-data:/data
    post_start:
      - command: |
          sh -c '
          #!/bin/sh
          while ! mc alias set h0 http://minio:3200 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} 2>/dev/null
          do
            echo "Waiting for minio..."
            sleep 0.5
          done
          cd /data
          mc mb -p b2-eu-cen
          mc mb -p wasabi-eu-central-2-v3
          mc mb -p scw-eu-fr-v3
          '
    networks:
      - default
      - dokploy

  ente-web:
    build:
      context: ../../web
      args:
        - NEXT_PUBLIC_ENTE_ENDPOINT=${ENTE_API_ORIGIN}
        - NEXT_PUBLIC_ENTE_ALBUMS_ENDPOINT=${ENTE_ALBUMS_ORIGIN}
    ports:
      - 3003:3000
      - 3004:3001
      - 3005:3002
      - 3006:3003
      - 3007:3004
    environment:
      - NODE_ENV=production
      - ENTE_API_ORIGIN=${ENTE_API_ORIGIN}
      - ENTE_ALBUMS_ORIGIN=${ENTE_ALBUMS_ORIGIN}
      - NEXT_PUBLIC_ENTE_ENDPOINT=${ENTE_API_ORIGIN}
      - NEXT_PUBLIC_ENTE_ALBUMS_ENDPOINT=${ENTE_ALBUMS_ORIGIN}
    depends_on:
      - museum
    networks:
      - default
      - dokploy

volumes:
  postgres-data:
  minio-data:
  shared-config:

networks:
  default:
  dokploy:
    external: true
    name: dokploy-network
